What happens when you initialize a repository? Why do you need to do it?

    it makes a normal directory become a version-control repository.

    not all directories are repository, so we need to initialize it in order for it to become a repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    it's something in between, helps make the comment more meaningful, and at the same time, allows user to change/add new files without having to commit all of them. Very flexible

How can you use the staging area to make sure you have one commit per logical
change?

    i can comment each logical change per time from stagin area

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    when something new is being explored, it's better ot have a branch and keep the record on both branch and master,so anything changes will be kept there.

    branches helps to experience new stuff without affecting existing work.

How do the diagrams help you visualize the branch structure?

    it's like a tree, i can see the history easily and know which commit/change is on which one.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    merge features and functions from two branches together.
    do we know when it's merged, which one are from branch which are from master, easier to tell where the changes are coming from and what the current state is.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

    Pro: automatic merge save time to go through all the documents, and do a quick merge first, and then highlight the conflicts, make it easier to find the differences. 

    Con: it is not ideal, as there will be conflicts that still needs to be solved. 

    manual merge may be good when the conflict is already known, so the conflict can be resolved faster and easier. 
